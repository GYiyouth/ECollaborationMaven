2017/02/19
项目重启

葛尧：
    完成了domian的VO的持久化配置，加了一堆外键，我把所有的外键的约束关系，都改成了 级联

    message_receiver表的readFlag被我改成了boolean类型，默认是FALSE
    message和receiver的关系做成双向N-N，关系实体再ManyToOne分别映射到这两个实体上，注意spring配置里，set那里要放空
        不然会产生循环依赖。
        现在的解决方式是，USerVO单端N-N映射到message，基于连接表。在操作时，只需要一个持久态的UserVO与MessageVO
        userVO.getMessageVOSet().add(messageVO);
        提交事务，连接表就会更新
    目前所有的bean均为scope="prototype"
    删除了teacher_project这张表，总结一下级联，顶层类的删除会影响下层类，任意层非主键的修改会影响其他层。
    teacher和project的关系改造完成
    project与task的设计，只能是单端映射，task依赖于project，不然的话就会发生循环依赖：project-task-teacher-project
        注意，task从spring context拿取后，一定要指明创建老师，不然存储的时候会向user表，teacher 表插入空白记录
    team与project双向N-N映射完成。但这个关系表还是要实例化
        关系表实例化完成
    原本没有配置utf-8，后来在链接后面加上 &amp;useUnicode=true&amp;characterEncoding=UTF-8 完成

    team与student的关系，team单向N-N依赖于student，双向1-N依赖于StudentTeamVO(取消，这种依赖完全没必要)
        StudentTeamVO单向N-1依赖于student与team
        将student_team的leaderFlag设置为了BOOLEAN类型(
            数据库会自动转换为tinyInt，存储-128～127之间的数，但只有1是true，只有0是false
            )
        如果student_team指向的id对应的不是学生或团队，那么这个对象就会是null，编程时应当注意
            NullPointerException


耿：
    记录日志功能，debug、info、warn、error分别放置tomcat下的logs的四个文件夹下面

2017／02／21
葛尧：
    现在处理team_project_access，全部单向ManyToOne映射到teamProjectVO, TaskVO
        映射到teamProjectVO失败，好像涉及到复合主键的映射，无奈我只能采用Integer形式。

    另外maven默认的language level是5，即将过期，你把它改成8

会议记录：
    plan只能自己给自己设置，targetDate取消
        排的顺序：先未完成，按照开始时间排。后已完成，按照完成时间排序。
    兴趣项目不接受老师加入。

2017/02/22
葛尧：
    完成student_project_plan, student_project_file的映射
        没有在配置表中添加依赖，因为我希望获取到这个bean时，里面的就是空的。

    新增了一张表：
        CREATE TABLE ECollaborationWeb.student_score_record
        (
            id INT PRIMARY KEY AUTO_INCREMENT,
            typeId INT,
            studentId INT,
            score INT
        );
    但是type也是要存储的，那么再次新建一张表
        CREATE TABLE ECollaborationWeb.project_type
        (
            id INT PRIMARY KEY AUTO_INCREMENT,
            projectId INT,
            type VARCHAR(45)
        );

        思路是，每个项目都有自己的评价学生的方式，然后student_score_record
            通过指向typeId可以确定唯一的project，打分。
    暂时没有删除学生表中的字段。

2017/02/23
葛尧：
    更新了VO们的toString方法
    写了一个UserDTO作为示范
    把User表的role字段改成了VARCHAR 45

2017/02/25
葛尧：
    添加了一些针对tomcat部署的依赖
    将日志放置的地方放在了logs文件夹里的ECollaboration文件夹里

2017/02/27
葛尧：
    更新了ApplicationVO，加入了对message对依赖
    BeanFactory做了一些小改动
    增加了2个JSONHandler等一些工具，修改了UserDTO，TeacherDTO，新增了TeacherBO与修改老师资料的action
耿：
    实现登录登出功能，创建团队，以及申请加入团队的功能

2017/02/28
耿：
    完成功能：查看团队信息，查看自己加入的所有团队信息，接受拒绝加入团队的请求。

2017/03/01
葛尧：
    增加创建计划的action、BO(新增计划,并往session里添加planVO与projectVO)、DAO，在使用PlanDAO的添加计划的时候，会同时往计划表添加
    登录以后，session里会有：studentVO，或teacherVO，或managerVO
    约定所有的BO均不许出现静态方法，作用域均为单例。

耿：
    修改之前的代码：1.层层throw Exception，最后在action中可以分清异常的类别
                    2.封装成json

2017/03/02
葛尧：
    删去PlanVO中studentVO的@Cascade注释
    在PlanBO里添加方法，获取计划返回PlanDTO的list，在session里放置PlanVOList。完成查看计划的action

    ProjectDAO新增 添加方法，注释掉了ProjectVO里面toString方法里一些会引起懒加载异常的代码
    ProjectBO新增 添加方法，在session里添加projectDAO
    ProjectAction新增 添加方法， 默认的状态是开放申请。
    Time小工具新增了返回年级的方法-getGrade

    新建了application的DAO，写了一堆查询方法
    新建ApplicationBO,session里添加applicationVOList

    TeacherVO中含有ProjectSet，可以通过这里调用，添加删除时记得同步处理这里的数据

    ProjectBO新增查询方法，获取本人相关的projectVOList：
         * 如果是学生，会先查询他的team，再根据team来完成找项目
         * 如果是教师，会返回teacherVO中的projectSet
         * session里放置projectVOList
    完成查看projectVOList的action

    新增一个AccessScoreDAO，放置有关打分评价的东西
        添加评价种类DAO,忘了考虑百分比

    登录后json里多了个一个role的字段，对应student，teacher，manager
    根据某一个评价条目，获取该条目下,该团队的学生的分数

    完成搜索项目的action
    完成申请项目的大DAO

    完成 获取 未读消息的 action ReadNewMessageAction，不会关联Application



耿：
    老师发布任务
    搜索团队功能（团队名字、团队描述、团队成员（包括组长），项目）
    修改申请、接受、拒绝加入团队的功能：bug：当用户读消息后，没有令newsFlag--，有待商榷
    给团队的任务打分

    完成团队搜索，申请团队（注意不能申请自己的团队）
    TeamDTO删除了两个set的clone

2017/03/07
葛尧：
    在web.xml里添加了listener，以开启Bean的request，session作用域
    加了2个Test类用来做实验

2017/03/11
葛尧：
    把多有的openSession()都换成了getCurrentSession()了

2017/03/26
葛尧：
    规范化了Hibernate的SQL语句显示

2017/03/27
耿瑞：
    添加了用户名、密码错误的处理方式
    UserVO 关闭懒加载

2017/04/-2
葛尧：
    改写了teamDAO使用hibernateTemplate的方式，并在测试了搜索、获取消息的action
    改写了PlanDAO，相关的BO，测试了查询的action
    完成FinishPlanAction

2017/04/15
耿瑞：
    点击个人中心显示个人信息
    统计贡献量，存储数据库

2017/04/16
葛尧：
    修改项目信息action。辞退团队action,删除项目的action
耿瑞：
    修改团队信息，修改学生信息。查看自己针对某个项目的所有任务/未完成的任务（并修改成按照时间排序）。
    根据web前台要求，增加一个action：根据id获取project信息。

2017/04/17
葛尧：
    发送消息BO,删除团队action,获取申请的action(此action一度不支持在Spring下工作)
耿瑞:
    拒绝、接受申请项目。获得我作为组长的所有团队信息。

2017/04/19
耿瑞：
    查看团队信息时，添加一个功能：查看该团队接的所有项目。

2017/04/19
葛尧:
    获取access，增加了2个DTO用来传输JSON